{"ast":null,"code":"export const mockStudents = [{\n  id: 1,\n  name: \"Alice Johnson\",\n  class: \"Math 101\",\n  gradeLevel: 10,\n  leapScores: [{\n    subject: \"Math\",\n    score: 85,\n    tag: \"Mastery\",\n    pointsToNextBand: 5\n  }],\n  subcategories: [{\n    name: \"Interpreting Functions\",\n    performance: \"Strong\"\n  }, {\n    name: \"Algebra\",\n    performance: \"Moderate\"\n  }]\n}, {\n  id: 2,\n  name: \"Bob Smith\",\n  class: \"Math 101\",\n  gradeLevel: 11,\n  leapScores: [{\n    subject: \"Math\",\n    score: 65,\n    tag: \"High Basic\",\n    pointsToNextBand: 15\n  }],\n  subcategories: [{\n    name: \"Interpreting Functions\",\n    performance: \"Weak\"\n  }, {\n    name: \"Algebra\",\n    performance: \"Moderate\"\n  }]\n}];","map":{"version":3,"names":["mockStudents","id","name","class","gradeLevel","leapScores","subject","score","tag","pointsToNextBand","subcategories","performance"],"sources":["C:/Users/tanne/Desktop/Bright Path Analytics/Education-Planning-Assistant-App/frontend/src/mock/mockStudents.ts"],"sourcesContent":["import { Student } from \"../student-data.types\";\r\n\r\nexport const mockStudents: Student[] = [\r\n  {\r\n    id: 1,\r\n    name: \"Alice Johnson\",\r\n    class: \"Math 101\",\r\n    gradeLevel: 10,\r\n    leapScores: [\r\n      {\r\n        subject: \"Math\",\r\n        score: 85,\r\n        tag: \"Mastery\",\r\n        pointsToNextBand: 5,\r\n      },\r\n    ],\r\n    subcategories: [\r\n      { name: \"Interpreting Functions\", performance: \"Strong\" },\r\n      { name: \"Algebra\", performance: \"Moderate\" },\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Bob Smith\",\r\n    class: \"Math 101\",\r\n    gradeLevel: 11,\r\n    leapScores: [\r\n      {\r\n        subject: \"Math\",\r\n        score: 65,\r\n        tag: \"High Basic\",\r\n        pointsToNextBand: 15,\r\n      },\r\n    ],\r\n    subcategories: [\r\n      { name: \"Interpreting Functions\", performance: \"Weak\" },\r\n      { name: \"Algebra\", performance: \"Moderate\" },\r\n    ],\r\n  },\r\n];\r\n"],"mappings":"AAEA,OAAO,MAAMA,YAAuB,GAAG,CACrC;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE,UAAU;EACjBC,UAAU,EAAE,EAAE;EACdC,UAAU,EAAE,CACV;IACEC,OAAO,EAAE,MAAM;IACfC,KAAK,EAAE,EAAE;IACTC,GAAG,EAAE,SAAS;IACdC,gBAAgB,EAAE;EACpB,CAAC,CACF;EACDC,aAAa,EAAE,CACb;IAAER,IAAI,EAAE,wBAAwB;IAAES,WAAW,EAAE;EAAS,CAAC,EACzD;IAAET,IAAI,EAAE,SAAS;IAAES,WAAW,EAAE;EAAW,CAAC;AAEhD,CAAC,EACD;EACEV,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,UAAU;EACjBC,UAAU,EAAE,EAAE;EACdC,UAAU,EAAE,CACV;IACEC,OAAO,EAAE,MAAM;IACfC,KAAK,EAAE,EAAE;IACTC,GAAG,EAAE,YAAY;IACjBC,gBAAgB,EAAE;EACpB,CAAC,CACF;EACDC,aAAa,EAAE,CACb;IAAER,IAAI,EAAE,wBAAwB;IAAES,WAAW,EAAE;EAAO,CAAC,EACvD;IAAET,IAAI,EAAE,SAAS;IAAES,WAAW,EAAE;EAAW,CAAC;AAEhD,CAAC,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}