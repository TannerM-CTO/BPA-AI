{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useImperativeHandle, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport { InternalButton } from '../button/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport TokenList from '../internal/components/token-list';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useListFocusController } from '../internal/hooks/use-list-focus-controller';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useUniqueId } from '../internal/hooks/use-unique-id/index';\nimport { joinStrings } from '../internal/utils/strings';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { SearchResults } from '../text-filter/search-results';\nimport useDebounceSearchResultCallback from '../text-filter/use-debounce-search-result-callback';\nimport { getAllowedOperators, getAutosuggestOptions, getQueryActions, parseText } from './controller';\nimport { usePropertyFilterI18n } from './i18n-utils';\nimport { PropertyEditorContentCustom, PropertyEditorContentEnum, PropertyEditorFooter } from './property-editor';\nimport PropertyFilterAutosuggest from './property-filter-autosuggest';\nimport { TokenButton } from './token';\nimport { useLoadItems } from './use-load-items';\nimport tokenListStyles from '../internal/components/token-list/styles.css.js';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nconst PropertyFilterInternal = React.forwardRef((_a, ref) => {\n  var _b;\n  var {\n      disabled,\n      countText,\n      query,\n      hideOperations,\n      onChange,\n      filteringProperties,\n      filteringOptions,\n      customGroupsText,\n      disableFreeTextFiltering,\n      freeTextFiltering,\n      onLoadItems,\n      virtualScroll,\n      customControl,\n      customFilterActions,\n      filteringPlaceholder,\n      filteringAriaLabel,\n      filteringEmpty,\n      filteringLoadingText,\n      filteringFinishedText,\n      filteringErrorText,\n      filteringRecoveryText,\n      filteringConstraintText,\n      filteringStatusType,\n      asyncProperties,\n      tokenLimit,\n      expandToViewport,\n      tokenLimitShowFewerAriaLabel,\n      tokenLimitShowMoreAriaLabel,\n      enableTokenGroups,\n      loading = false,\n      __internalRootRef\n    } = _a,\n    rest = __rest(_a, [\"disabled\", \"countText\", \"query\", \"hideOperations\", \"onChange\", \"filteringProperties\", \"filteringOptions\", \"customGroupsText\", \"disableFreeTextFiltering\", \"freeTextFiltering\", \"onLoadItems\", \"virtualScroll\", \"customControl\", \"customFilterActions\", \"filteringPlaceholder\", \"filteringAriaLabel\", \"filteringEmpty\", \"filteringLoadingText\", \"filteringFinishedText\", \"filteringErrorText\", \"filteringRecoveryText\", \"filteringConstraintText\", \"filteringStatusType\", \"asyncProperties\", \"tokenLimit\", \"expandToViewport\", \"tokenLimitShowFewerAriaLabel\", \"tokenLimitShowMoreAriaLabel\", \"enableTokenGroups\", \"loading\", \"__internalRootRef\"]);\n  const [nextFocusIndex, setNextFocusIndex] = useState(null);\n  const tokenListRef = useListFocusController({\n    nextFocusIndex,\n    onFocusMoved: (target, targetType) => {\n      var _a;\n      if (targetType === 'fallback') {\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n          preventDropdown: true\n        });\n      } else {\n        target.focus();\n      }\n      setNextFocusIndex(null);\n    },\n    listItemSelector: `.${tokenListStyles['list-item']}`,\n    showMoreSelector: `.${tokenListStyles.toggle}`,\n    fallbackSelector: `.${styles.input}`\n  });\n  const mergedRef = useMergeRefs(tokenListRef, __internalRootRef);\n  const inputRef = useRef(null);\n  const searchResultsRef = useRef(null);\n  const baseProps = getBaseProps(rest);\n  const i18nStrings = usePropertyFilterI18n(rest.i18nStrings);\n  useImperativeHandle(ref, () => ({\n    focus: () => {\n      var _a;\n      return (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }), []);\n  const [filteringText, setFilteringText] = useState('');\n  const {\n    internalProperties,\n    internalOptions,\n    internalQuery,\n    internalFreeText\n  } = (() => {\n    var _a, _b;\n    const propertyByKey = filteringProperties.reduce((acc, property) => {\n      var _a, _b, _c, _d, _e;\n      const extendedOperators = ((_a = property === null || property === void 0 ? void 0 : property.operators) !== null && _a !== void 0 ? _a : []).reduce((acc, operator) => typeof operator === 'object' ? acc.set(operator.operator, operator) : acc, new Map());\n      acc.set(property.key, {\n        propertyKey: property.key,\n        propertyLabel: (_b = property === null || property === void 0 ? void 0 : property.propertyLabel) !== null && _b !== void 0 ? _b : '',\n        groupValuesLabel: (_c = property === null || property === void 0 ? void 0 : property.groupValuesLabel) !== null && _c !== void 0 ? _c : '',\n        propertyGroup: property === null || property === void 0 ? void 0 : property.group,\n        operators: ((_d = property === null || property === void 0 ? void 0 : property.operators) !== null && _d !== void 0 ? _d : []).map(op => typeof op === 'string' ? op : op.operator),\n        defaultOperator: (_e = property === null || property === void 0 ? void 0 : property.defaultOperator) !== null && _e !== void 0 ? _e : '=',\n        getTokenType: operator => {\n          var _a, _b;\n          return operator ? (_b = (_a = extendedOperators.get(operator)) === null || _a === void 0 ? void 0 : _a.tokenType) !== null && _b !== void 0 ? _b : 'value' : 'value';\n        },\n        getValueFormatter: operator => {\n          var _a, _b;\n          return operator ? (_b = (_a = extendedOperators.get(operator)) === null || _a === void 0 ? void 0 : _a.format) !== null && _b !== void 0 ? _b : null : null;\n        },\n        getValueFormRenderer: operator => {\n          var _a, _b;\n          return operator ? (_b = (_a = extendedOperators.get(operator)) === null || _a === void 0 ? void 0 : _a.form) !== null && _b !== void 0 ? _b : null : null;\n        },\n        externalProperty: property\n      });\n      return acc;\n    }, new Map());\n    const getProperty = propertyKey => {\n      var _a;\n      return (_a = propertyByKey.get(propertyKey)) !== null && _a !== void 0 ? _a : null;\n    };\n    const internalOptions = filteringOptions.map(option => {\n      var _a, _b;\n      return {\n        property: getProperty(option.propertyKey),\n        value: option.value,\n        label: (_b = (_a = option.label) !== null && _a !== void 0 ? _a : option.value) !== null && _b !== void 0 ? _b : ''\n      };\n    });\n    function transformToken(tokenOrGroup, standaloneIndex) {\n      return 'operation' in tokenOrGroup ? {\n        operation: tokenOrGroup.operation,\n        tokens: tokenOrGroup.tokens.map(token => transformToken(token))\n      } : {\n        standaloneIndex,\n        property: tokenOrGroup.propertyKey ? getProperty(tokenOrGroup.propertyKey) : null,\n        operator: tokenOrGroup.operator,\n        value: tokenOrGroup.value\n      };\n    }\n    const internalQuery = {\n      operation: query.operation,\n      tokens: (enableTokenGroups && query.tokenGroups ? query.tokenGroups : query.tokens).map(transformToken)\n    };\n    const internalFreeText = {\n      disabled: disableFreeTextFiltering,\n      operators: (_a = freeTextFiltering === null || freeTextFiltering === void 0 ? void 0 : freeTextFiltering.operators) !== null && _a !== void 0 ? _a : [':', '!:'],\n      defaultOperator: (_b = freeTextFiltering === null || freeTextFiltering === void 0 ? void 0 : freeTextFiltering.defaultOperator) !== null && _b !== void 0 ? _b : ':'\n    };\n    return {\n      internalProperties: [...propertyByKey.values()],\n      internalOptions,\n      internalQuery,\n      internalFreeText\n    };\n  })();\n  const {\n    addToken,\n    updateToken,\n    updateOperation,\n    removeToken,\n    removeAllTokens\n  } = getQueryActions({\n    query: internalQuery,\n    filteringOptions: internalOptions,\n    onChange,\n    enableTokenGroups\n  });\n  const parsedText = parseText(filteringText, internalProperties, internalFreeText);\n  const autosuggestOptions = getAutosuggestOptions(parsedText, internalProperties, internalOptions, customGroupsText, i18nStrings);\n  const createToken = currentText => {\n    const parsedText = parseText(currentText, internalProperties, internalFreeText);\n    let newToken;\n    switch (parsedText.step) {\n      case 'property':\n        {\n          newToken = {\n            property: parsedText.property,\n            operator: parsedText.operator,\n            value: parsedText.value\n          };\n          break;\n        }\n      case 'free-text':\n        {\n          newToken = {\n            property: null,\n            operator: parsedText.operator || internalFreeText.defaultOperator,\n            value: parsedText.value\n          };\n          break;\n        }\n      case 'operator':\n        {\n          newToken = {\n            property: null,\n            operator: internalFreeText.defaultOperator,\n            value: currentText\n          };\n          break;\n        }\n    }\n    if (internalFreeText.disabled && !newToken.property) {\n      return;\n    }\n    addToken(newToken);\n    setFilteringText('');\n  };\n  const getLoadMoreDetail = (parsedText, filteringText) => {\n    const loadMoreDetail = {\n      filteringProperty: undefined,\n      filteringText,\n      filteringOperator: undefined\n    };\n    if (parsedText.step === 'property') {\n      loadMoreDetail.filteringProperty = parsedText.property.externalProperty;\n      loadMoreDetail.filteringText = parsedText.value;\n      loadMoreDetail.filteringOperator = parsedText.operator;\n    }\n    return loadMoreDetail;\n  };\n  const loadMoreDetail = getLoadMoreDetail(parsedText, filteringText);\n  const inputLoadItemsHandlers = useLoadItems(onLoadItems, loadMoreDetail.filteringText, loadMoreDetail.filteringProperty, loadMoreDetail.filteringText, loadMoreDetail.filteringOperator);\n  const asyncProps = {\n    empty: filteringEmpty,\n    loadingText: filteringLoadingText,\n    finishedText: filteringFinishedText,\n    errorText: filteringErrorText,\n    recoveryText: filteringRecoveryText,\n    statusType: filteringStatusType\n  };\n  const asyncAutosuggestProps = !!filteringText.length || asyncProperties ? Object.assign(Object.assign({}, inputLoadItemsHandlers), asyncProps) : {};\n  const handleSelected = event => {\n    var _a;\n    const {\n      detail: option\n    } = event;\n    const value = option.value || '';\n    if (!value) {\n      return;\n    }\n    if (!('keepOpenOnSelect' in option)) {\n      createToken(value);\n      return;\n    }\n    // stop dropdown from closing\n    event.preventDefault();\n    const parsedText = parseText(value, internalProperties, internalFreeText);\n    const loadMoreDetail = getLoadMoreDetail(parsedText, value);\n    // Insert operator automatically if only one operator is defined for the given property.\n    if (parsedText.step === 'operator') {\n      const operators = getAllowedOperators(parsedText.property);\n      if (value.trim() === parsedText.property.propertyLabel && operators.length === 1) {\n        loadMoreDetail.filteringProperty = (_a = parsedText.property.externalProperty) !== null && _a !== void 0 ? _a : undefined;\n        loadMoreDetail.filteringOperator = operators[0];\n        loadMoreDetail.filteringText = '';\n        setFilteringText(parsedText.property.propertyLabel + ' ' + operators[0] + ' ');\n      }\n    }\n    fireNonCancelableEvent(onLoadItems, Object.assign(Object.assign({}, loadMoreDetail), {\n      firstPage: true,\n      samePage: false\n    }));\n  };\n  useDebounceSearchResultCallback({\n    searchQuery: query,\n    countText,\n    loading,\n    announceCallback: () => {\n      var _a;\n      (_a = searchResultsRef.current) === null || _a === void 0 ? void 0 : _a.reannounce();\n    }\n  });\n  const propertyStep = parsedText.step === 'property' ? parsedText : null;\n  const customValueKey = propertyStep ? propertyStep.property.propertyKey + ':' + propertyStep.operator : '';\n  const [customFormValueRecord, setCustomFormValueRecord] = useState({});\n  const customFormValue = customValueKey in customFormValueRecord ? customFormValueRecord[customValueKey] : null;\n  const setCustomFormValue = value => setCustomFormValueRecord({\n    [customValueKey]: value\n  });\n  const operatorForm = propertyStep && propertyStep.property.getValueFormRenderer(propertyStep.operator);\n  const isEnumValue = (propertyStep === null || propertyStep === void 0 ? void 0 : propertyStep.property.getTokenType(propertyStep.operator)) === 'enum';\n  const searchResultsId = useUniqueId('property-filter-search-results');\n  const constraintTextId = useUniqueId('property-filter-constraint');\n  const textboxAriaDescribedBy = filteringConstraintText ? joinStrings(rest.ariaDescribedby, constraintTextId) : rest.ariaDescribedby;\n  const showResults = !!((_b = internalQuery.tokens) === null || _b === void 0 ? void 0 : _b.length) && !disabled && !!countText;\n  return React.createElement(\"div\", Object.assign({}, baseProps, {\n    className: clsx(baseProps.className, styles.root),\n    ref: mergedRef\n  }), React.createElement(\"div\", {\n    className: clsx(styles['search-field'], analyticsSelectors['search-field'])\n  }, customControl && React.createElement(\"div\", {\n    className: styles['custom-control']\n  }, customControl), React.createElement(\"div\", {\n    className: styles['input-wrapper']\n  }, React.createElement(PropertyFilterAutosuggest, Object.assign({\n    ref: inputRef,\n    virtualScroll: virtualScroll,\n    enteredTextLabel: i18nStrings.enteredTextLabel,\n    ariaLabel: filteringAriaLabel !== null && filteringAriaLabel !== void 0 ? filteringAriaLabel : i18nStrings.filteringAriaLabel,\n    placeholder: filteringPlaceholder !== null && filteringPlaceholder !== void 0 ? filteringPlaceholder : i18nStrings.filteringPlaceholder,\n    ariaLabelledby: rest.ariaLabelledby,\n    ariaDescribedby: textboxAriaDescribedBy,\n    controlId: rest.controlId,\n    value: filteringText,\n    disabled: disabled\n  }, autosuggestOptions, {\n    onChange: event => setFilteringText(event.detail.value),\n    empty: filteringEmpty\n  }, asyncAutosuggestProps, {\n    expandToViewport: expandToViewport,\n    onOptionClick: handleSelected,\n    customForm: operatorForm || isEnumValue ? {\n      content: operatorForm ? React.createElement(PropertyEditorContentCustom, {\n        key: customValueKey,\n        property: propertyStep.property,\n        operator: propertyStep.operator,\n        filter: propertyStep.value,\n        operatorForm: operatorForm,\n        value: customFormValue,\n        onChange: setCustomFormValue\n      }) : React.createElement(PropertyEditorContentEnum, {\n        key: customValueKey,\n        property: propertyStep.property,\n        filter: propertyStep.value,\n        value: customFormValue,\n        onChange: setCustomFormValue,\n        asyncProps: asyncProps,\n        filteringOptions: internalOptions,\n        onLoadItems: inputLoadItemsHandlers.onLoadItems\n      }),\n      footer: React.createElement(PropertyEditorFooter, {\n        key: customValueKey,\n        property: propertyStep.property,\n        operator: propertyStep.operator,\n        value: customFormValue,\n        i18nStrings: i18nStrings,\n        onCancel: () => {\n          var _a, _b;\n          setFilteringText('');\n          (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.close();\n          (_b = inputRef.current) === null || _b === void 0 ? void 0 : _b.focus({\n            preventDropdown: true\n          });\n        },\n        onSubmit: token => {\n          var _a, _b;\n          addToken(token);\n          setFilteringText('');\n          (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n            preventDropdown: true\n          });\n          (_b = inputRef.current) === null || _b === void 0 ? void 0 : _b.close();\n        }\n      })\n    } : undefined,\n    onCloseDropdown: () => setCustomFormValueRecord({}),\n    hideEnteredTextOption: internalFreeText.disabled && parsedText.step !== 'property',\n    clearAriaLabel: i18nStrings.clearAriaLabel,\n    searchResultsId: showResults ? searchResultsId : undefined\n  })), showResults ? React.createElement(\"div\", {\n    className: styles.results\n  }, React.createElement(SearchResults, {\n    id: searchResultsId,\n    renderLiveRegion: !loading,\n    ref: searchResultsRef\n  }, countText)) : null)), filteringConstraintText && React.createElement(\"div\", {\n    id: constraintTextId,\n    className: styles.constraint\n  }, filteringConstraintText), internalQuery.tokens && internalQuery.tokens.length > 0 && React.createElement(\"div\", {\n    className: styles.tokens\n  }, React.createElement(InternalSpaceBetween, {\n    size: \"xs\",\n    direction: \"horizontal\"\n  }, React.createElement(TokenList, {\n    alignment: \"inline\",\n    limit: tokenLimit,\n    items: internalQuery.tokens,\n    limitShowFewerAriaLabel: tokenLimitShowFewerAriaLabel,\n    limitShowMoreAriaLabel: tokenLimitShowMoreAriaLabel,\n    renderItem: (_, tokenIndex) => React.createElement(TokenButton, {\n      query: internalQuery,\n      tokenIndex: tokenIndex,\n      onUpdateToken: (token, releasedTokens) => {\n        updateToken(tokenIndex, token, releasedTokens);\n      },\n      onUpdateOperation: updateOperation,\n      onRemoveToken: () => {\n        removeToken(tokenIndex);\n        setNextFocusIndex(tokenIndex);\n      },\n      filteringProperties: internalProperties,\n      filteringOptions: internalOptions,\n      asyncProps: asyncProps,\n      onLoadItems: onLoadItems,\n      i18nStrings: i18nStrings,\n      asyncProperties: asyncProperties,\n      hideOperations: hideOperations,\n      customGroupsText: customGroupsText,\n      freeTextFiltering: internalFreeText,\n      disabled: disabled,\n      expandToViewport: expandToViewport,\n      enableTokenGroups: enableTokenGroups\n    }),\n    i18nStrings: {\n      limitShowFewer: i18nStrings.tokenLimitShowFewer,\n      limitShowMore: i18nStrings.tokenLimitShowMore\n    },\n    after: customFilterActions ? React.createElement(\"div\", {\n      className: styles['custom-filter-actions']\n    }, customFilterActions) : React.createElement(\"span\", Object.assign({}, getAnalyticsMetadataAttribute({\n      action: 'clearFilters'\n    })), React.createElement(InternalButton, {\n      formAction: \"none\",\n      onClick: () => {\n        var _a;\n        removeAllTokens();\n        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus({\n          preventDropdown: true\n        });\n      },\n      className: styles['remove-all'],\n      disabled: disabled\n    }, i18nStrings.clearFiltersText))\n  }))));\n});\nexport default PropertyFilterInternal;","map":{"version":3,"names":["React","useImperativeHandle","useRef","useState","clsx","getAnalyticsMetadataAttribute","InternalButton","getBaseProps","TokenList","fireNonCancelableEvent","useListFocusController","useMergeRefs","useUniqueId","joinStrings","InternalSpaceBetween","SearchResults","useDebounceSearchResultCallback","getAllowedOperators","getAutosuggestOptions","getQueryActions","parseText","usePropertyFilterI18n","PropertyEditorContentCustom","PropertyEditorContentEnum","PropertyEditorFooter","PropertyFilterAutosuggest","TokenButton","useLoadItems","tokenListStyles","analyticsSelectors","styles","PropertyFilterInternal","forwardRef","_a","ref","disabled","countText","query","hideOperations","onChange","filteringProperties","filteringOptions","customGroupsText","disableFreeTextFiltering","freeTextFiltering","onLoadItems","virtualScroll","customControl","customFilterActions","filteringPlaceholder","filteringAriaLabel","filteringEmpty","filteringLoadingText","filteringFinishedText","filteringErrorText","filteringRecoveryText","filteringConstraintText","filteringStatusType","asyncProperties","tokenLimit","expandToViewport","tokenLimitShowFewerAriaLabel","tokenLimitShowMoreAriaLabel","enableTokenGroups","loading","__internalRootRef","rest","__rest","nextFocusIndex","setNextFocusIndex","tokenListRef","onFocusMoved","target","targetType","inputRef","current","focus","preventDropdown","listItemSelector","showMoreSelector","toggle","fallbackSelector","input","mergedRef","searchResultsRef","baseProps","i18nStrings","filteringText","setFilteringText","internalProperties","internalOptions","internalQuery","internalFreeText","propertyByKey","reduce","acc","property","extendedOperators","operators","operator","set","Map","key","propertyKey","propertyLabel","_b","groupValuesLabel","_c","propertyGroup","group","_d","map","op","defaultOperator","_e","getTokenType","get","tokenType","getValueFormatter","format","getValueFormRenderer","form","externalProperty","getProperty","option","value","label","transformToken","tokenOrGroup","standaloneIndex","operation","tokens","token","tokenGroups","values","addToken","updateToken","updateOperation","removeToken","removeAllTokens","parsedText","autosuggestOptions","createToken","currentText","newToken","step","getLoadMoreDetail","loadMoreDetail","filteringProperty","undefined","filteringOperator","inputLoadItemsHandlers","asyncProps","empty","loadingText","finishedText","errorText","recoveryText","statusType","asyncAutosuggestProps","length","Object","assign","handleSelected","event","detail","preventDefault","trim","firstPage","samePage","searchQuery","announceCallback","reannounce","propertyStep","customValueKey","customFormValueRecord","setCustomFormValueRecord","customFormValue","setCustomFormValue","operatorForm","isEnumValue","searchResultsId","constraintTextId","textboxAriaDescribedBy","ariaDescribedby","showResults","createElement","className","root","enteredTextLabel","ariaLabel","placeholder","ariaLabelledby","controlId","onOptionClick","customForm","content","filter","footer","onCancel","close","onSubmit","onCloseDropdown","hideEnteredTextOption","clearAriaLabel","results","id","renderLiveRegion","constraint","size","direction","alignment","limit","items","limitShowFewerAriaLabel","limitShowMoreAriaLabel","renderItem","_","tokenIndex","onUpdateToken","releasedTokens","onUpdateOperation","onRemoveToken","limitShowFewer","tokenLimitShowFewer","limitShowMore","tokenLimitShowMore","after","action","formAction","onClick","clearFiltersText"],"sources":["C:\\Users\\tanne\\Desktop\\Bright Path Analytics\\Education-Planning-Assistant-App\\frontend\\node_modules\\src\\property-filter\\internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useImperativeHandle, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { PropertyFilterOperator } from '@cloudscape-design/collection-hooks';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { InternalButton } from '../button/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport { AutosuggestInputRef } from '../internal/components/autosuggest-input';\nimport TokenList from '../internal/components/token-list';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useListFocusController } from '../internal/hooks/use-list-focus-controller';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useUniqueId } from '../internal/hooks/use-unique-id/index';\nimport { SomeRequired } from '../internal/types';\nimport { joinStrings } from '../internal/utils/strings';\nimport { InternalLiveRegionRef } from '../live-region/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport { SearchResults } from '../text-filter/search-results';\nimport useDebounceSearchResultCallback from '../text-filter/use-debounce-search-result-callback';\nimport { GeneratedAnalyticsMetadataPropertyFilterClearFilters } from './analytics-metadata/interfaces';\nimport { getAllowedOperators, getAutosuggestOptions, getQueryActions, parseText } from './controller';\nimport { usePropertyFilterI18n } from './i18n-utils';\nimport {\n  ComparisonOperator,\n  ExtendedOperator,\n  FilteringProperty,\n  InternalFilteringOption,\n  InternalFilteringProperty,\n  InternalFreeTextFiltering,\n  InternalQuery,\n  InternalToken,\n  InternalTokenGroup,\n  ParsedText,\n  PropertyFilterProps,\n  Ref,\n  Token,\n  TokenGroup,\n} from './interfaces';\nimport { PropertyEditorContentCustom, PropertyEditorContentEnum, PropertyEditorFooter } from './property-editor';\nimport PropertyFilterAutosuggest, { PropertyFilterAutosuggestProps } from './property-filter-autosuggest';\nimport { TokenButton } from './token';\nimport { useLoadItems } from './use-load-items';\n\nimport tokenListStyles from '../internal/components/token-list/styles.css.js';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\n\ntype PropertyFilterInternalProps = SomeRequired<\n  PropertyFilterProps,\n  'filteringOptions' | 'customGroupsText' | 'enableTokenGroups' | 'disableFreeTextFiltering' | 'hideOperations'\n> &\n  InternalBaseComponentProps;\n\nconst PropertyFilterInternal = React.forwardRef(\n  (\n    {\n      disabled,\n      countText,\n      query,\n      hideOperations,\n      onChange,\n      filteringProperties,\n      filteringOptions,\n      customGroupsText,\n      disableFreeTextFiltering,\n      freeTextFiltering,\n      onLoadItems,\n      virtualScroll,\n      customControl,\n      customFilterActions,\n      filteringPlaceholder,\n      filteringAriaLabel,\n      filteringEmpty,\n      filteringLoadingText,\n      filteringFinishedText,\n      filteringErrorText,\n      filteringRecoveryText,\n      filteringConstraintText,\n      filteringStatusType,\n      asyncProperties,\n      tokenLimit,\n      expandToViewport,\n      tokenLimitShowFewerAriaLabel,\n      tokenLimitShowMoreAriaLabel,\n      enableTokenGroups,\n      loading = false,\n      __internalRootRef,\n      ...rest\n    }: PropertyFilterInternalProps,\n    ref: React.Ref<Ref>\n  ) => {\n    const [nextFocusIndex, setNextFocusIndex] = useState<null | number>(null);\n    const tokenListRef = useListFocusController({\n      nextFocusIndex,\n      onFocusMoved: (target, targetType) => {\n        if (targetType === 'fallback') {\n          inputRef.current?.focus({ preventDropdown: true });\n        } else {\n          target.focus();\n        }\n        setNextFocusIndex(null);\n      },\n      listItemSelector: `.${tokenListStyles['list-item']}`,\n      showMoreSelector: `.${tokenListStyles.toggle}`,\n      fallbackSelector: `.${styles.input}`,\n    });\n\n    const mergedRef = useMergeRefs(tokenListRef, __internalRootRef);\n    const inputRef = useRef<AutosuggestInputRef>(null);\n    const searchResultsRef = useRef<InternalLiveRegionRef>(null);\n    const baseProps = getBaseProps(rest);\n\n    const i18nStrings = usePropertyFilterI18n(rest.i18nStrings);\n\n    useImperativeHandle(ref, () => ({ focus: () => inputRef.current?.focus() }), []);\n    const [filteringText, setFilteringText] = useState<string>('');\n\n    const { internalProperties, internalOptions, internalQuery, internalFreeText } = (() => {\n      const propertyByKey = filteringProperties.reduce((acc, property) => {\n        const extendedOperators = (property?.operators ?? []).reduce(\n          (acc, operator) => (typeof operator === 'object' ? acc.set(operator.operator, operator) : acc),\n          new Map<PropertyFilterOperator, null | ExtendedOperator<any>>()\n        );\n        acc.set(property.key, {\n          propertyKey: property.key,\n          propertyLabel: property?.propertyLabel ?? '',\n          groupValuesLabel: property?.groupValuesLabel ?? '',\n          propertyGroup: property?.group,\n          operators: (property?.operators ?? []).map(op => (typeof op === 'string' ? op : op.operator)),\n          defaultOperator: property?.defaultOperator ?? '=',\n          getTokenType: operator => (operator ? extendedOperators.get(operator)?.tokenType ?? 'value' : 'value'),\n          getValueFormatter: operator => (operator ? extendedOperators.get(operator)?.format ?? null : null),\n          getValueFormRenderer: operator => (operator ? extendedOperators.get(operator)?.form ?? null : null),\n          externalProperty: property,\n        });\n        return acc;\n      }, new Map<string, InternalFilteringProperty>());\n      const getProperty = (propertyKey: string): null | InternalFilteringProperty =>\n        propertyByKey.get(propertyKey) ?? null;\n\n      const internalOptions: readonly InternalFilteringOption[] = filteringOptions.map(option => ({\n        property: getProperty(option.propertyKey),\n        value: option.value,\n        label: option.label ?? option.value ?? '',\n      }));\n\n      function transformToken(\n        tokenOrGroup: Token | TokenGroup,\n        standaloneIndex?: number\n      ): InternalToken | InternalTokenGroup {\n        return 'operation' in tokenOrGroup\n          ? {\n              operation: tokenOrGroup.operation,\n              tokens: tokenOrGroup.tokens.map(token => transformToken(token)),\n            }\n          : {\n              standaloneIndex,\n              property: tokenOrGroup.propertyKey ? getProperty(tokenOrGroup.propertyKey) : null,\n              operator: tokenOrGroup.operator,\n              value: tokenOrGroup.value,\n            };\n      }\n\n      const internalQuery: InternalQuery = {\n        operation: query.operation,\n        tokens: (enableTokenGroups && query.tokenGroups ? query.tokenGroups : query.tokens).map(transformToken),\n      };\n\n      const internalFreeText: InternalFreeTextFiltering = {\n        disabled: disableFreeTextFiltering,\n        operators: freeTextFiltering?.operators ?? [':', '!:'],\n        defaultOperator: freeTextFiltering?.defaultOperator ?? ':',\n      };\n\n      return { internalProperties: [...propertyByKey.values()], internalOptions, internalQuery, internalFreeText };\n    })();\n\n    const { addToken, updateToken, updateOperation, removeToken, removeAllTokens } = getQueryActions({\n      query: internalQuery,\n      filteringOptions: internalOptions,\n      onChange,\n      enableTokenGroups,\n    });\n\n    const parsedText = parseText(filteringText, internalProperties, internalFreeText);\n    const autosuggestOptions = getAutosuggestOptions(\n      parsedText,\n      internalProperties,\n      internalOptions,\n      customGroupsText,\n      i18nStrings\n    );\n\n    const createToken = (currentText: string) => {\n      const parsedText = parseText(currentText, internalProperties, internalFreeText);\n      let newToken: InternalToken;\n      switch (parsedText.step) {\n        case 'property': {\n          newToken = {\n            property: parsedText.property,\n            operator: parsedText.operator,\n            value: parsedText.value,\n          };\n          break;\n        }\n        case 'free-text': {\n          newToken = {\n            property: null,\n            operator: parsedText.operator || internalFreeText.defaultOperator,\n            value: parsedText.value,\n          };\n          break;\n        }\n        case 'operator': {\n          newToken = {\n            property: null,\n            operator: internalFreeText.defaultOperator,\n            value: currentText,\n          };\n          break;\n        }\n      }\n      if (internalFreeText.disabled && !newToken.property) {\n        return;\n      }\n      addToken(newToken);\n      setFilteringText('');\n    };\n    const getLoadMoreDetail = (parsedText: ParsedText, filteringText: string) => {\n      const loadMoreDetail: {\n        filteringProperty: FilteringProperty | undefined;\n        filteringText: string;\n        filteringOperator: ComparisonOperator | undefined;\n      } = {\n        filteringProperty: undefined,\n        filteringText,\n        filteringOperator: undefined,\n      };\n      if (parsedText.step === 'property') {\n        loadMoreDetail.filteringProperty = parsedText.property.externalProperty;\n        loadMoreDetail.filteringText = parsedText.value;\n        loadMoreDetail.filteringOperator = parsedText.operator;\n      }\n      return loadMoreDetail;\n    };\n    const loadMoreDetail = getLoadMoreDetail(parsedText, filteringText);\n    const inputLoadItemsHandlers = useLoadItems(\n      onLoadItems,\n      loadMoreDetail.filteringText,\n      loadMoreDetail.filteringProperty,\n      loadMoreDetail.filteringText,\n      loadMoreDetail.filteringOperator\n    );\n    const asyncProps = {\n      empty: filteringEmpty,\n      loadingText: filteringLoadingText,\n      finishedText: filteringFinishedText,\n      errorText: filteringErrorText,\n      recoveryText: filteringRecoveryText,\n      statusType: filteringStatusType,\n    };\n    const asyncAutosuggestProps =\n      !!filteringText.length || asyncProperties\n        ? {\n            ...inputLoadItemsHandlers,\n            ...asyncProps,\n          }\n        : {};\n    const handleSelected: PropertyFilterAutosuggestProps['onOptionClick'] = event => {\n      const { detail: option } = event;\n      const value = option.value || '';\n      if (!value) {\n        return;\n      }\n\n      if (!('keepOpenOnSelect' in option)) {\n        createToken(value);\n        return;\n      }\n\n      // stop dropdown from closing\n      event.preventDefault();\n\n      const parsedText = parseText(value, internalProperties, internalFreeText);\n      const loadMoreDetail = getLoadMoreDetail(parsedText, value);\n\n      // Insert operator automatically if only one operator is defined for the given property.\n      if (parsedText.step === 'operator') {\n        const operators = getAllowedOperators(parsedText.property);\n        if (value.trim() === parsedText.property.propertyLabel && operators.length === 1) {\n          loadMoreDetail.filteringProperty = parsedText.property.externalProperty ?? undefined;\n          loadMoreDetail.filteringOperator = operators[0];\n          loadMoreDetail.filteringText = '';\n          setFilteringText(parsedText.property.propertyLabel + ' ' + operators[0] + ' ');\n        }\n      }\n\n      fireNonCancelableEvent(onLoadItems, { ...loadMoreDetail, firstPage: true, samePage: false });\n    };\n\n    useDebounceSearchResultCallback({\n      searchQuery: query,\n      countText,\n      loading,\n      announceCallback: () => {\n        searchResultsRef.current?.reannounce();\n      },\n    });\n\n    const propertyStep = parsedText.step === 'property' ? parsedText : null;\n    const customValueKey = propertyStep ? propertyStep.property.propertyKey + ':' + propertyStep.operator : '';\n    const [customFormValueRecord, setCustomFormValueRecord] = useState<Record<string, any>>({});\n    const customFormValue = customValueKey in customFormValueRecord ? customFormValueRecord[customValueKey] : null;\n    const setCustomFormValue = (value: null | any) => setCustomFormValueRecord({ [customValueKey]: value });\n    const operatorForm = propertyStep && propertyStep.property.getValueFormRenderer(propertyStep.operator);\n    const isEnumValue = propertyStep?.property.getTokenType(propertyStep.operator) === 'enum';\n\n    const searchResultsId = useUniqueId('property-filter-search-results');\n    const constraintTextId = useUniqueId('property-filter-constraint');\n    const textboxAriaDescribedBy = filteringConstraintText\n      ? joinStrings(rest.ariaDescribedby, constraintTextId)\n      : rest.ariaDescribedby;\n\n    const showResults = !!internalQuery.tokens?.length && !disabled && !!countText;\n\n    return (\n      <div {...baseProps} className={clsx(baseProps.className, styles.root)} ref={mergedRef}>\n        <div className={clsx(styles['search-field'], analyticsSelectors['search-field'])}>\n          {customControl && <div className={styles['custom-control']}>{customControl}</div>}\n          <div className={styles['input-wrapper']}>\n            <PropertyFilterAutosuggest\n              ref={inputRef}\n              virtualScroll={virtualScroll}\n              enteredTextLabel={i18nStrings.enteredTextLabel}\n              ariaLabel={filteringAriaLabel ?? i18nStrings.filteringAriaLabel}\n              placeholder={filteringPlaceholder ?? i18nStrings.filteringPlaceholder}\n              ariaLabelledby={rest.ariaLabelledby}\n              ariaDescribedby={textboxAriaDescribedBy}\n              controlId={rest.controlId}\n              value={filteringText}\n              disabled={disabled}\n              {...autosuggestOptions}\n              onChange={event => setFilteringText(event.detail.value)}\n              empty={filteringEmpty}\n              {...asyncAutosuggestProps}\n              expandToViewport={expandToViewport}\n              onOptionClick={handleSelected}\n              customForm={\n                operatorForm || isEnumValue\n                  ? {\n                      content: operatorForm ? (\n                        <PropertyEditorContentCustom\n                          key={customValueKey}\n                          property={propertyStep.property}\n                          operator={propertyStep.operator}\n                          filter={propertyStep.value}\n                          operatorForm={operatorForm}\n                          value={customFormValue}\n                          onChange={setCustomFormValue}\n                        />\n                      ) : (\n                        <PropertyEditorContentEnum\n                          key={customValueKey}\n                          property={propertyStep.property}\n                          filter={propertyStep.value}\n                          value={customFormValue}\n                          onChange={setCustomFormValue}\n                          asyncProps={asyncProps}\n                          filteringOptions={internalOptions}\n                          onLoadItems={inputLoadItemsHandlers.onLoadItems}\n                        />\n                      ),\n                      footer: (\n                        <PropertyEditorFooter\n                          key={customValueKey}\n                          property={propertyStep.property}\n                          operator={propertyStep.operator}\n                          value={customFormValue}\n                          i18nStrings={i18nStrings}\n                          onCancel={() => {\n                            setFilteringText('');\n                            inputRef.current?.close();\n                            inputRef.current?.focus({ preventDropdown: true });\n                          }}\n                          onSubmit={token => {\n                            addToken(token);\n                            setFilteringText('');\n                            inputRef.current?.focus({ preventDropdown: true });\n                            inputRef.current?.close();\n                          }}\n                        />\n                      ),\n                    }\n                  : undefined\n              }\n              onCloseDropdown={() => setCustomFormValueRecord({})}\n              hideEnteredTextOption={internalFreeText.disabled && parsedText.step !== 'property'}\n              clearAriaLabel={i18nStrings.clearAriaLabel}\n              searchResultsId={showResults ? searchResultsId : undefined}\n            />\n            {showResults ? (\n              <div className={styles.results}>\n                <SearchResults id={searchResultsId} renderLiveRegion={!loading} ref={searchResultsRef}>\n                  {countText}\n                </SearchResults>\n              </div>\n            ) : null}\n          </div>\n        </div>\n        {filteringConstraintText && (\n          <div id={constraintTextId} className={styles.constraint}>\n            {filteringConstraintText}\n          </div>\n        )}\n        {internalQuery.tokens && internalQuery.tokens.length > 0 && (\n          <div className={styles.tokens}>\n            <InternalSpaceBetween size=\"xs\" direction=\"horizontal\">\n              <TokenList\n                alignment=\"inline\"\n                limit={tokenLimit}\n                items={internalQuery.tokens}\n                limitShowFewerAriaLabel={tokenLimitShowFewerAriaLabel}\n                limitShowMoreAriaLabel={tokenLimitShowMoreAriaLabel}\n                renderItem={(_, tokenIndex) => (\n                  <TokenButton\n                    query={internalQuery}\n                    tokenIndex={tokenIndex}\n                    onUpdateToken={(token, releasedTokens) => {\n                      updateToken(tokenIndex, token, releasedTokens);\n                    }}\n                    onUpdateOperation={updateOperation}\n                    onRemoveToken={() => {\n                      removeToken(tokenIndex);\n                      setNextFocusIndex(tokenIndex);\n                    }}\n                    filteringProperties={internalProperties}\n                    filteringOptions={internalOptions}\n                    asyncProps={asyncProps}\n                    onLoadItems={onLoadItems}\n                    i18nStrings={i18nStrings}\n                    asyncProperties={asyncProperties}\n                    hideOperations={hideOperations}\n                    customGroupsText={customGroupsText}\n                    freeTextFiltering={internalFreeText}\n                    disabled={disabled}\n                    expandToViewport={expandToViewport}\n                    enableTokenGroups={enableTokenGroups}\n                  />\n                )}\n                i18nStrings={{\n                  limitShowFewer: i18nStrings.tokenLimitShowFewer,\n                  limitShowMore: i18nStrings.tokenLimitShowMore,\n                }}\n                after={\n                  customFilterActions ? (\n                    <div className={styles['custom-filter-actions']}>{customFilterActions}</div>\n                  ) : (\n                    <span\n                      {...getAnalyticsMetadataAttribute({\n                        action: 'clearFilters',\n                      } as Partial<GeneratedAnalyticsMetadataPropertyFilterClearFilters>)}\n                    >\n                      <InternalButton\n                        formAction=\"none\"\n                        onClick={() => {\n                          removeAllTokens();\n                          inputRef.current?.focus({ preventDropdown: true });\n                        }}\n                        className={styles['remove-all']}\n                        disabled={disabled}\n                      >\n                        {i18nStrings.clearFiltersText}\n                      </InternalButton>\n                    </span>\n                  )\n                }\n              />\n            </InternalSpaceBetween>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nexport default PropertyFilterInternal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}