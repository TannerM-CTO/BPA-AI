{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport { DndContext, DragOverlay } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, useSortable, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport clsx from 'clsx';\nimport { joinStrings } from '../../utils/strings';\nimport Portal from '../portal';\nimport useDragAndDropReorder from './use-drag-and-drop-reorder';\nimport useLiveAnnouncements from './use-live-announcements';\nimport styles from './styles.css.js';\nexport function DndArea({\n  items,\n  renderItem,\n  onItemsChange,\n  disableReorder,\n  i18nStrings,\n  borderRadiusVariant = 'item'\n}) {\n  var _a;\n  const {\n    activeItemId,\n    setActiveItemId,\n    collisionDetection,\n    handleKeyDown,\n    sensors\n  } = useDragAndDropReorder({\n    items\n  });\n  const activeItem = activeItemId ? items.find(item => item.id === activeItemId) : null;\n  const isDragging = activeItemId !== null;\n  const announcements = useLiveAnnouncements(Object.assign({\n    items,\n    isDragging\n  }, i18nStrings));\n  const portalContainer = usePortalContainer();\n  return React.createElement(DndContext, {\n    sensors: sensors,\n    collisionDetection: collisionDetection,\n    accessibility: {\n      announcements,\n      restoreFocus: false,\n      screenReaderInstructions: i18nStrings.dragHandleAriaDescription ? {\n        draggable: i18nStrings.dragHandleAriaDescription\n      } : undefined,\n      container: portalContainer\n    },\n    onDragStart: ({\n      active\n    }) => setActiveItemId(active.id),\n    onDragEnd: event => {\n      setActiveItemId(null);\n      const {\n        active,\n        over\n      } = event;\n      if (over && active.id !== over.id) {\n        const oldIndex = items.findIndex(item => item.id === active.id);\n        const newIndex = items.findIndex(item => item.id === over.id);\n        onItemsChange(arrayMove([...items], oldIndex, newIndex));\n      }\n    },\n    onDragCancel: () => setActiveItemId(null)\n  }, React.createElement(SortableContext, {\n    disabled: disableReorder,\n    items: items.map(item => item.id),\n    strategy: verticalListSortingStrategy\n  }, items.map(item => React.createElement(DraggableItem, {\n    key: item.id,\n    item: item,\n    renderItem: renderItem,\n    onKeyDown: handleKeyDown,\n    dragHandleAriaLabel: i18nStrings.dragHandleAriaLabel,\n    borderRadiusVariant: borderRadiusVariant\n  }))), React.createElement(Portal, {\n    container: portalContainer\n  }, React.createElement(DragOverlay, {\n    className: clsx(styles['drag-overlay'], styles[`drag-overlay-${borderRadiusVariant}`]),\n    dropAnimation: null,\n    style: {\n      zIndex: 5000\n    }\n  }, activeItem && renderItem({\n    item: activeItem,\n    style: {},\n    className: styles.active,\n    isDragging: true,\n    isSorting: false,\n    isActive: true,\n    dragHandleProps: {\n      ariaLabel: (_a = joinStrings(i18nStrings.dragHandleAriaLabel, activeItem.label)) !== null && _a !== void 0 ? _a : '',\n      onKeyDown: handleKeyDown\n    }\n  }))));\n}\nfunction usePortalContainer() {\n  const portalContainerRef = useRef(document.createElement('div'));\n  useEffect(() => {\n    const container = portalContainerRef.current;\n    if (!container.isConnected) {\n      document.body.appendChild(container);\n    }\n    return () => {\n      if (container.isConnected) {\n        document.body.removeChild(container);\n      }\n    };\n  }, []);\n  return portalContainerRef.current;\n}\nfunction DraggableItem({\n  item,\n  dragHandleAriaLabel,\n  onKeyDown,\n  renderItem,\n  borderRadiusVariant\n}) {\n  var _a;\n  const {\n    isDragging,\n    isSorting,\n    listeners,\n    setNodeRef,\n    transform,\n    attributes\n  } = useSortable({\n    id: item.id\n  });\n  const style = {\n    transform: CSS.Translate.toString(transform)\n  };\n  const dragHandleListeners = attributes['aria-disabled'] ? {} : Object.assign(Object.assign({}, listeners), {\n    onKeyDown: event => {\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n      if (listeners === null || listeners === void 0 ? void 0 : listeners.onKeyDown) {\n        listeners.onKeyDown(event);\n      }\n    }\n  });\n  const className = clsx(isDragging && clsx(styles.placeholder, styles[`placeholder-${borderRadiusVariant}`]), isSorting && styles.sorting);\n  return React.createElement(React.Fragment, null, renderItem({\n    item,\n    ref: setNodeRef,\n    style,\n    className,\n    isDragging,\n    isSorting,\n    isActive: false,\n    dragHandleProps: Object.assign(Object.assign({}, dragHandleListeners), {\n      ariaLabel: (_a = joinStrings(dragHandleAriaLabel, item.label)) !== null && _a !== void 0 ? _a : '',\n      ariaDescribedby: attributes['aria-describedby'],\n      disabled: attributes['aria-disabled']\n    })\n  }));\n}","map":{"version":3,"names":["React","useEffect","useRef","DndContext","DragOverlay","arrayMove","SortableContext","useSortable","verticalListSortingStrategy","CSS","clsx","joinStrings","Portal","useDragAndDropReorder","useLiveAnnouncements","styles","DndArea","items","renderItem","onItemsChange","disableReorder","i18nStrings","borderRadiusVariant","activeItemId","setActiveItemId","collisionDetection","handleKeyDown","sensors","activeItem","find","item","id","isDragging","announcements","Object","assign","portalContainer","usePortalContainer","createElement","accessibility","restoreFocus","screenReaderInstructions","dragHandleAriaDescription","draggable","undefined","container","onDragStart","active","onDragEnd","event","over","oldIndex","findIndex","newIndex","onDragCancel","disabled","map","strategy","DraggableItem","key","onKeyDown","dragHandleAriaLabel","className","dropAnimation","style","zIndex","isSorting","isActive","dragHandleProps","ariaLabel","_a","label","portalContainerRef","document","current","isConnected","body","appendChild","removeChild","listeners","setNodeRef","transform","attributes","Translate","toString","dragHandleListeners","placeholder","sorting","Fragment","ref","ariaDescribedby"],"sources":["C:\\Users\\tanne\\Desktop\\Bright Path Analytics\\Education-Planning-Assistant-App\\frontend\\node_modules\\src\\internal\\components\\dnd-area\\index.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useEffect, useRef } from 'react';\nimport { DndContext, DragOverlay } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, useSortable, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport clsx from 'clsx';\n\nimport { joinStrings } from '../../utils/strings';\nimport Portal from '../portal';\nimport { DndAreaItem, DndAreaProps, RenderItemProps } from './interfaces';\nimport useDragAndDropReorder from './use-drag-and-drop-reorder';\nimport useLiveAnnouncements from './use-live-announcements';\n\nimport styles from './styles.css.js';\n\nexport function DndArea<Data>({\n  items,\n  renderItem,\n  onItemsChange,\n  disableReorder,\n  i18nStrings,\n  borderRadiusVariant = 'item',\n}: DndAreaProps<Data>) {\n  const { activeItemId, setActiveItemId, collisionDetection, handleKeyDown, sensors } = useDragAndDropReorder({\n    items,\n  });\n  const activeItem = activeItemId ? items.find(item => item.id === activeItemId) : null;\n  const isDragging = activeItemId !== null;\n  const announcements = useLiveAnnouncements({ items, isDragging, ...i18nStrings });\n  const portalContainer = usePortalContainer();\n  return (\n    <DndContext\n      sensors={sensors}\n      collisionDetection={collisionDetection}\n      accessibility={{\n        announcements,\n        restoreFocus: false,\n        screenReaderInstructions: i18nStrings.dragHandleAriaDescription\n          ? { draggable: i18nStrings.dragHandleAriaDescription }\n          : undefined,\n        container: portalContainer,\n      }}\n      onDragStart={({ active }) => setActiveItemId(active.id)}\n      onDragEnd={event => {\n        setActiveItemId(null);\n        const { active, over } = event;\n\n        if (over && active.id !== over.id) {\n          const oldIndex = items.findIndex(item => item.id === active.id);\n          const newIndex = items.findIndex(item => item.id === over.id);\n          onItemsChange(arrayMove([...items], oldIndex, newIndex));\n        }\n      }}\n      onDragCancel={() => setActiveItemId(null)}\n    >\n      <SortableContext\n        disabled={disableReorder}\n        items={items.map(item => item.id)}\n        strategy={verticalListSortingStrategy}\n      >\n        {items.map(item => (\n          <DraggableItem\n            key={item.id}\n            item={item}\n            renderItem={renderItem}\n            onKeyDown={handleKeyDown}\n            dragHandleAriaLabel={i18nStrings.dragHandleAriaLabel}\n            borderRadiusVariant={borderRadiusVariant}\n          />\n        ))}\n      </SortableContext>\n\n      <Portal container={portalContainer}>\n        {/* Make sure that the drag overlay is above the modal  by assigning the z-index as inline style\n            so that it prevails over dnd-kit's inline z-index of 999 */}\n        <DragOverlay\n          className={clsx(styles['drag-overlay'], styles[`drag-overlay-${borderRadiusVariant}`])}\n          dropAnimation={null}\n          style={{ zIndex: 5000 }}\n        >\n          {activeItem &&\n            renderItem({\n              item: activeItem,\n              style: {},\n              className: styles.active,\n              isDragging: true,\n              isSorting: false,\n              isActive: true,\n              dragHandleProps: {\n                ariaLabel: joinStrings(i18nStrings.dragHandleAriaLabel, activeItem.label) ?? '',\n                onKeyDown: handleKeyDown,\n              },\n            })}\n        </DragOverlay>\n      </Portal>\n    </DndContext>\n  );\n}\n\nfunction usePortalContainer() {\n  const portalContainerRef = useRef(document.createElement('div'));\n  useEffect(() => {\n    const container = portalContainerRef.current;\n    if (!container.isConnected) {\n      document.body.appendChild(container);\n    }\n    return () => {\n      if (container.isConnected) {\n        document.body.removeChild(container);\n      }\n    };\n  }, []);\n  return portalContainerRef.current;\n}\n\nfunction DraggableItem<Data>({\n  item,\n  dragHandleAriaLabel,\n  onKeyDown,\n  renderItem,\n  borderRadiusVariant,\n}: {\n  item: DndAreaItem<Data>;\n  dragHandleAriaLabel?: string;\n  onKeyDown: (event: React.KeyboardEvent) => void;\n  renderItem: (props: RenderItemProps<Data>) => React.ReactNode;\n  borderRadiusVariant: 'item' | 'container';\n}) {\n  const { isDragging, isSorting, listeners, setNodeRef, transform, attributes } = useSortable({ id: item.id });\n  const style = { transform: CSS.Translate.toString(transform) };\n  const dragHandleListeners = attributes['aria-disabled']\n    ? {}\n    : {\n        ...listeners,\n        onKeyDown: (event: React.KeyboardEvent) => {\n          if (onKeyDown) {\n            onKeyDown(event);\n          }\n          if (listeners?.onKeyDown) {\n            listeners.onKeyDown(event);\n          }\n        },\n      };\n  const className = clsx(\n    isDragging && clsx(styles.placeholder, styles[`placeholder-${borderRadiusVariant}`]),\n    isSorting && styles.sorting\n  );\n  return (\n    <>\n      {renderItem({\n        item,\n        ref: setNodeRef,\n        style,\n        className,\n        isDragging,\n        isSorting,\n        isActive: false,\n        dragHandleProps: {\n          ...dragHandleListeners,\n          ariaLabel: joinStrings(dragHandleAriaLabel, item.label) ?? '',\n          ariaDescribedby: attributes['aria-describedby'],\n          disabled: attributes['aria-disabled'],\n        },\n      })}\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}