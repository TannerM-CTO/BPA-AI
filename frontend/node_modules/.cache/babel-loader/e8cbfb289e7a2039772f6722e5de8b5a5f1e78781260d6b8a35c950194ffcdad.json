{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { joinDateTime, splitDateTime } from '../internal/utils/date-time';\nimport { isIsoDateOnly } from '../internal/utils/date-time';\nimport { normalizeTimeString } from '../internal/utils/date-time/join-date-time';\nimport { setTimeOffset, shiftTimeOffset } from './time-offset';\nexport function formatValue(value, {\n  timeOffset,\n  dateOnly\n}) {\n  if (!value || value.type === 'relative' || value.startDate === '' && value.endDate === '' && value.type === 'absolute') {\n    return value;\n  }\n  if (dateOnly) {\n    return {\n      type: 'absolute',\n      startDate: value.startDate.split('T')[0],\n      endDate: value.endDate.split('T')[0]\n    };\n  }\n  return setTimeOffset(value, timeOffset);\n}\nexport function getDefaultMode(value, relativeOptions, rangeSelectorMode) {\n  if (value && value.type) {\n    return value.type;\n  }\n  if (rangeSelectorMode === 'relative-only') {\n    return 'relative';\n  }\n  if (rangeSelectorMode === 'absolute-only') {\n    return 'absolute';\n  }\n  return relativeOptions.length > 0 ? 'relative' : 'absolute';\n}\nexport function splitAbsoluteValue(value) {\n  if (!value) {\n    return {\n      start: {\n        date: '',\n        time: ''\n      },\n      end: {\n        date: '',\n        time: ''\n      }\n    };\n  }\n  return {\n    start: splitDateTime(value.startDate),\n    end: splitDateTime(value.endDate)\n  };\n}\nexport function joinAbsoluteValue(value) {\n  const startTime = normalizeTimeString(value.start.time || '00:00:00');\n  const endTime = normalizeTimeString(value.end.time || '23:59:59');\n  return {\n    type: 'absolute',\n    startDate: joinDateTime(value.start.date, startTime),\n    endDate: joinDateTime(value.end.date, endTime)\n  };\n}\nexport function formatInitialValue(value, dateOnly, normalizedTimeOffset) {\n  if ((value === null || value === void 0 ? void 0 : value.type) !== 'absolute') {\n    return shiftTimeOffset(value, normalizedTimeOffset);\n  }\n  if (value.endDate === '' && value.startDate === '') {\n    return value;\n  }\n  if (dateOnly) {\n    return formatValue(value, {\n      dateOnly,\n      timeOffset: normalizedTimeOffset\n    });\n  }\n  return isIsoDateOnly(value.startDate) && isIsoDateOnly(value.endDate) ? value : shiftTimeOffset(value, normalizedTimeOffset);\n}","map":{"version":3,"names":["joinDateTime","splitDateTime","isIsoDateOnly","normalizeTimeString","setTimeOffset","shiftTimeOffset","formatValue","value","timeOffset","dateOnly","type","startDate","endDate","split","getDefaultMode","relativeOptions","rangeSelectorMode","length","splitAbsoluteValue","start","date","time","end","joinAbsoluteValue","startTime","endTime","formatInitialValue","normalizedTimeOffset"],"sources":["C:\\Users\\tanne\\Desktop\\Bright Path Analytics\\Education-Planning-Assistant-App\\frontend\\node_modules\\src\\date-range-picker\\utils.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { joinDateTime, splitDateTime } from '../internal/utils/date-time';\nimport { isIsoDateOnly } from '../internal/utils/date-time';\nimport { normalizeTimeString } from '../internal/utils/date-time/join-date-time';\nimport { DateRangePickerProps } from './interfaces';\nimport { setTimeOffset, shiftTimeOffset } from './time-offset';\n\nexport function formatValue(\n  value: null | DateRangePickerProps.Value,\n  { timeOffset, dateOnly }: { timeOffset: { startDate?: number; endDate?: number }; dateOnly: boolean }\n): null | DateRangePickerProps.Value {\n  if (\n    !value ||\n    value.type === 'relative' ||\n    (value.startDate === '' && value.endDate === '' && value.type === 'absolute')\n  ) {\n    return value;\n  }\n  if (dateOnly) {\n    return {\n      type: 'absolute',\n      startDate: value.startDate.split('T')[0],\n      endDate: value.endDate.split('T')[0],\n    };\n  }\n  return setTimeOffset(value, timeOffset);\n}\n\nexport function getDefaultMode(\n  value: null | DateRangePickerProps.Value,\n  relativeOptions: readonly DateRangePickerProps.RelativeOption[],\n  rangeSelectorMode: DateRangePickerProps.RangeSelectorMode\n) {\n  if (value && value.type) {\n    return value.type;\n  }\n  if (rangeSelectorMode === 'relative-only') {\n    return 'relative';\n  }\n  if (rangeSelectorMode === 'absolute-only') {\n    return 'absolute';\n  }\n  return relativeOptions.length > 0 ? 'relative' : 'absolute';\n}\n\nexport function splitAbsoluteValue(\n  value: null | DateRangePickerProps.AbsoluteValue\n): DateRangePickerProps.PendingAbsoluteValue {\n  if (!value) {\n    return {\n      start: { date: '', time: '' },\n      end: { date: '', time: '' },\n    };\n  }\n  return { start: splitDateTime(value.startDate), end: splitDateTime(value.endDate) };\n}\n\nexport function joinAbsoluteValue(\n  value: DateRangePickerProps.PendingAbsoluteValue\n): DateRangePickerProps.AbsoluteValue {\n  const startTime = normalizeTimeString(value.start.time || '00:00:00');\n  const endTime = normalizeTimeString(value.end.time || '23:59:59');\n\n  return {\n    type: 'absolute',\n    startDate: joinDateTime(value.start.date, startTime),\n    endDate: joinDateTime(value.end.date, endTime),\n  };\n}\n\ntype NormalizedTimeOffset =\n  | {\n      startDate: number;\n      endDate: number;\n    }\n  | {\n      startDate: undefined;\n      endDate: undefined;\n    };\n\nexport function formatInitialValue(\n  value: null | DateRangePickerProps.Value,\n  dateOnly: boolean,\n  normalizedTimeOffset: NormalizedTimeOffset\n): DateRangePickerProps.Value | null {\n  if (value?.type !== 'absolute') {\n    return shiftTimeOffset(value, normalizedTimeOffset);\n  }\n\n  if (value.endDate === '' && value.startDate === '') {\n    return value;\n  }\n\n  if (dateOnly) {\n    return formatValue(value, { dateOnly, timeOffset: normalizedTimeOffset });\n  }\n\n  return isIsoDateOnly(value.startDate) && isIsoDateOnly(value.endDate)\n    ? value\n    : shiftTimeOffset(value, normalizedTimeOffset);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}