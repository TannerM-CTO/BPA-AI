{"ast":null,"code":"export class ToDoService {\n  constructor() {\n    this.url = void 0;\n    this.url = process.env.REACT_APP_SERVICE_URL || \"undefined\";\n  }\n  async Read() {\n    return new Promise((resolve, reject) => {\n      fetch(this.url, {\n        mode: 'cors'\n      }).then(resp => resolve(resp.json())).catch(err => reject(err));\n    });\n  }\n  async Update(item) {\n    return new Promise((resolve, reject) => fetch(`${this.url}/${item.id}`, {\n      method: 'PUT',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    }).then(resp => {\n      resolve(resp.json());\n    }).catch(err => reject(err)));\n  }\n  async Create(item) {\n    return new Promise((resolve, reject) => {\n      fetch(this.url, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(item)\n      }).then(resp => resolve(resp.json())).catch(err => reject(err));\n    });\n  }\n}","map":{"version":3,"names":["ToDoService","constructor","url","process","env","REACT_APP_SERVICE_URL","Read","Promise","resolve","reject","fetch","mode","then","resp","json","catch","err","Update","item","id","method","headers","body","JSON","stringify","Create"],"sources":["C:/Users/tanne/Desktop/Bright Path Analytics/Education-Planning-Assistant-App/frontend/src/to-do.api.ts"],"sourcesContent":["import { ToDoServiceInterface, ToDoItem } from './to-do.types'\r\n\r\nexport class ToDoService implements ToDoServiceInterface {\r\n\r\n  readonly url:string;\r\n\r\n  constructor() {\r\n    this.url=process.env.REACT_APP_SERVICE_URL || \"undefined\";\r\n  }\r\n\r\n  async Read():Promise<ToDoItem[]> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(this.url, {\r\n        mode: 'cors'\r\n      }).then(resp=>resolve(resp.json()))\r\n        .catch(err=>reject(err))\r\n      })\r\n  }\r\n\r\n  async Update(item: ToDoItem):Promise<ToDoItem> {\r\n    return new Promise((resolve,reject) => fetch(`${this.url}/${item.id}`, {\r\n      method: 'PUT',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(item)\r\n    }).then(resp=>{resolve(resp.json() as Promise<ToDoItem>)})\r\n      .catch(err=>reject(err))\r\n    )\r\n  }\r\n\r\n  async Create(item: ToDoItem):Promise<ToDoItem> {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(this.url, {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(item)\r\n      })\r\n      .then(resp=>resolve(resp.json() as Promise<ToDoItem>))\r\n      .catch(err=>reject(err))\r\n    }\r\n  )\r\n  }\r\n}\r\n"],"mappings":"AAEA,OAAO,MAAMA,WAAW,CAAiC;EAIvDC,WAAWA,CAAA,EAAG;IAAA,KAFLC,GAAG;IAGV,IAAI,CAACA,GAAG,GAACC,OAAO,CAACC,GAAG,CAACC,qBAAqB,IAAI,WAAW;EAC3D;EAEA,MAAMC,IAAIA,CAAA,EAAuB;IAC/B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCC,KAAK,CAAC,IAAI,CAACR,GAAG,EAAE;QACdS,IAAI,EAAE;MACR,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,IAAEL,OAAO,CAACK,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAChCC,KAAK,CAACC,GAAG,IAAEP,MAAM,CAACO,GAAG,CAAC,CAAC;IAC1B,CAAC,CAAC;EACN;EAEA,MAAMC,MAAMA,CAACC,IAAc,EAAoB;IAC7C,OAAO,IAAIX,OAAO,CAAC,CAACC,OAAO,EAACC,MAAM,KAAKC,KAAK,CAAC,GAAG,IAAI,CAACR,GAAG,IAAIgB,IAAI,CAACC,EAAE,EAAE,EAAE;MACrEC,MAAM,EAAE,KAAK;MACbT,IAAI,EAAE,MAAM;MACZU,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;IAC3B,CAAC,CAAC,CAACN,IAAI,CAACC,IAAI,IAAE;MAACL,OAAO,CAACK,IAAI,CAACC,IAAI,CAAC,CAAsB,CAAC;IAAA,CAAC,CAAC,CACvDC,KAAK,CAACC,GAAG,IAAEP,MAAM,CAACO,GAAG,CAAC,CACzB,CAAC;EACH;EAEA,MAAMS,MAAMA,CAACP,IAAc,EAAoB;IAC7C,OAAO,IAAIX,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCC,KAAK,CAAC,IAAI,CAACR,GAAG,EAAE;QACdkB,MAAM,EAAE,MAAM;QACdT,IAAI,EAAE,MAAM;QACZU,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;MAC3B,CAAC,CAAC,CACDN,IAAI,CAACC,IAAI,IAAEL,OAAO,CAACK,IAAI,CAACC,IAAI,CAAC,CAAsB,CAAC,CAAC,CACrDC,KAAK,CAACC,GAAG,IAAEP,MAAM,CAACO,GAAG,CAAC,CAAC;IAC1B,CACF,CAAC;EACD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}