{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanne\\\\Desktop\\\\Bright Path Analytics\\\\Education-Planning-Assistant-App\\\\frontend\\\\src\\\\components\\\\Chatbot.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, TextField, Button, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const handleSend = () => {\n    if (input.trim()) {\n      setMessages(prev => [...prev, `You: ${input}`]);\n      setInput(\"\");\n      // Simulate chatbot response\n      setTimeout(() => {\n        setMessages(prev => [...prev, \"Bot: This is a simulated response.\"]);\n      }, 1000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 1,\n        overflowY: \"auto\",\n        mb: 2\n      },\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        gutterBottom: true,\n        children: msg\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        placeholder: \"Type your message...\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleSend,\n        sx: {\n          ml: 2\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","Box","TextField","Button","Typography","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","handleSend","trim","prev","setTimeout","sx","display","flexDirection","height","children","flex","overflowY","mb","map","msg","idx","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","placeholder","value","onChange","e","target","onClick","ml","_c","$RefreshReg$"],"sources":["C:/Users/tanne/Desktop/Bright Path Analytics/Education-Planning-Assistant-App/frontend/src/components/Chatbot.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Box, TextField, Button, Typography } from \"@mui/material\";\r\n\r\nconst Chatbot: React.FC = () => {\r\n  const [messages, setMessages] = useState<string[]>([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleSend = () => {\r\n    if (input.trim()) {\r\n      setMessages((prev) => [...prev, `You: ${input}`]);\r\n      setInput(\"\");\r\n      // Simulate chatbot response\r\n      setTimeout(() => {\r\n        setMessages((prev) => [...prev, \"Bot: This is a simulated response.\"]);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\r\n      {/* Message History */}\r\n      <Box sx={{ flex: 1, overflowY: \"auto\", mb: 2 }}>\r\n        {messages.map((msg, idx) => (\r\n          <Typography key={idx} variant=\"body1\" gutterBottom>\r\n            {msg}\r\n          </Typography>\r\n        ))}\r\n      </Box>\r\n\r\n      {/* Input Field */}\r\n      <Box sx={{ display: \"flex\" }}>\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          placeholder=\"Type your message...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" onClick={handleSend} sx={{ ml: 2 }}>\r\n          Send\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,SAAS,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAW,EAAE,CAAC;EACtD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIF,KAAK,CAACG,IAAI,CAAC,CAAC,EAAE;MAChBJ,WAAW,CAAEK,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,QAAQJ,KAAK,EAAE,CAAC,CAAC;MACjDC,QAAQ,CAAC,EAAE,CAAC;MACZ;MACAI,UAAU,CAAC,MAAM;QACfN,WAAW,CAAEK,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,oCAAoC,CAAC,CAAC;MACxE,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,oBACET,OAAA,CAACL,GAAG;IAACgB,EAAE,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAEpEf,OAAA,CAACL,GAAG;MAACgB,EAAE,EAAE;QAAEK,IAAI,EAAE,CAAC;QAAEC,SAAS,EAAE,MAAM;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,EAC5CZ,QAAQ,CAACgB,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACrBrB,OAAA,CAACF,UAAU;QAAWwB,OAAO,EAAC,OAAO;QAACC,YAAY;QAAAR,QAAA,EAC/CK;MAAG,GADWC,GAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGN3B,OAAA,CAACL,GAAG;MAACgB,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAG,QAAA,gBAC3Bf,OAAA,CAACJ,SAAS;QACRgC,SAAS;QACTN,OAAO,EAAC,UAAU;QAClBO,WAAW,EAAC,sBAAsB;QAClCC,KAAK,EAAEzB,KAAM;QACb0B,QAAQ,EAAGC,CAAC,IAAK1B,QAAQ,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACF3B,OAAA,CAACH,MAAM;QAACyB,OAAO,EAAC,WAAW;QAACY,OAAO,EAAE3B,UAAW;QAACI,EAAE,EAAE;UAAEwB,EAAE,EAAE;QAAE,CAAE;QAAApB,QAAA,EAAC;MAEhE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CAzCID,OAAiB;AAAAmC,EAAA,GAAjBnC,OAAiB;AA2CvB,eAAeA,OAAO;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}